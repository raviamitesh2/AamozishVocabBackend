@model AamozishVocab.DataLayer.IlmWord

@{
    ViewBag.Title = "AddCategory";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="example" class="container">
    <section class="well">
        <h4 class="ra-well-title">Add Word</h4>
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.IsActive)
        @Html.HiddenFor(model => model.CreatedBy)
        <div class="table-responsive">
            <table style="width:100%;">
                <tr>
                    <td><label class="mandatory-field">Serial No</label></td>
                    <td colspan="3">
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.EditorFor(Model => Model.SerialNo, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td><label class="mandatory-field">Category</label></td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.DropDownListFor(Model => Model.CatgeoryId, new SelectList(ViewBag.Category, "Value", "Text")
                                   , new { @class = "form-control selectpicker", data_live_search = "true", title = "Select" })
                                </div>
                            </div>
                        </div>
                    </td>
                    <td colspan="2"></td>
                </tr>
                <tr>
                    <th></th>
                    <th style="text-align:center;" class="mandatory-field">English</th>
                    <th style="text-align:center;">Hindi</th>
                    <th style="text-align:center;">Urdu</th>
                </tr>
                <tr>
                    <td><label class="mandatory-field">Word</label></td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.EditorFor(model => model.Word_En, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.EditorFor(model => model.Word_Hi, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.EditorFor(model => model.Word_Ur, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td><label class="mandatory-field">Description</label></td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.EditorFor(model => model.Descr_En, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.EditorFor(model => model.Descr_Hi, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.EditorFor(model => model.Descr_Ur, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td><label class="mandatory-field">Explanation</label></td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.EditorFor(model => model.Explanation_En, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.EditorFor(model => model.Explanation_Hi, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.EditorFor(model => model.Explanation_Ur, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td><label class="mandatory-field">Sher</label></td>
                    <td colspan="2">
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    <select id="Sher" class="form-control btn dropdown-toggle btn-default select"></select>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td><label class="mandatory-field">More Sher</label></td>
                    <td colspan="2">
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    <select id="MoreSher" class="form-control btn dropdown-toggle btn-default select"></select>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td><label class="mandatory-field">Part of Speech</label></td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.DropDownListFor(model => model.PartOfSpeech,
                                    new List<SelectListItem>
                                    {
                                        new SelectListItem { Text = "Noun",  Value = "1" }, /*,Selected=true*/
                                        new SelectListItem { Text = "Pronoun",  Value = "2" },
                                        new SelectListItem { Text = "Verb",  Value = "3" },
                                        new SelectListItem { Text = "Adjective",  Value = "4" },
                                        new SelectListItem { Text = "Adverb",  Value = "5" },
                                        new SelectListItem { Text = "Preposition",  Value = "6" },
                                        new SelectListItem { Text = "Conjuction",  Value = "7" },
                                        new SelectListItem { Text = "Interjection",  Value = "8" },
                                    },
                                     new { @class = "form-control selectpicker", data_live_search = "true", title = "Select" })
                                    @*, multiple = "multiple"*@
                                </div>
                            </div>
                        </div>
                    </td>
                    <td colspan="2"></td>
                </tr>
                <tr>
                    <td><label>Word Type</label></td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.DropDownListFor(model => model.WordType,
                                    new List<SelectListItem>
                                    {
                                        new SelectListItem { Text = "Masculine",  Value = "M" },
                                        new SelectListItem { Text = "Feminine",  Value = "F" },
                                    },
                                     new { @class = "form-control selectpicker", data_live_search = "true", title = "Select" })
                                </div>
                            </div>
                        </div>
                    </td>
                    <td colspan="2"></td>
                </tr>
                <tr>
                    <td><label class="mandatory-field">Word Roots</label></td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.DropDownListFor(Model => Model.WordRoots, new SelectList(ViewBag.WordRoots, "Value", "Text"),
                                     new { @class = "form-control selectpicker", data_live_search = "true", title = "Select" })
                                </div>
                            </div>
                        </div>
                    </td>
                    <td colspan="2"></td>
                </tr>
                <tr>
                    <td><label>Synonyms</label></td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    @Html.TextBoxFor(model => model.WordSynonyms, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                    </td>
                    <td colspan="2"></td>
                </tr>
                <tr>
                    <td><label class="mandatory-field">Upload Icon</label></td>
                    <td colspan="2">
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    <p>
                                        <input type="file" id="fileInput" name="Image" />
                                        <span style="color:red;">Upload .png and .jpg file (less than 200kb)</span>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">
                                    <p>
                                        @if (Model.HaveImage == 1)
                                        {
                                            <img src="/Image/@Model.ImageName" style="display:block;" alt="" border="3" height="100" width="100">
                                        }

                                    </p>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-horizontal form-widgets col-sm-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-md-12">

                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="4" style="text-align:center;">
                        <div id="divTitleEroor" style="float:left;"></div>
                        <input type="submit" value="Save" onclick="CheckToSave();" class="btn btn-default" />
                        @Html.ActionLink("Go back To View Word", "ViewWord", new { @class = "btn btn-default" })
                    </td>
                </tr>
            </table>
        </div>
        <div id="DivMsg" style="color:red;font-weight:bold;" class="error-msg"></div>
    </section>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script>
    function CheckToSave() {
        var result = true;
        var ErrorMsg = "<ul>";
        var SerialNo = $("#SerialNo").val().trim();
        if (SerialNo == '' || SerialNo == undefined || SerialNo == null || SerialNo == 0) {
            ErrorMsg += "<li>Please Fill the SerialNo Field to Proceed</li>";
            result = false;
        }
        var Category_En = $("#CatgeoryId").val();
        if (Category_En == '' || Category_En == undefined || Category_En == null) {
            ErrorMsg += "<li>Please Select the CatgeoryId Field to Proceed</li>";
            result = false;
        }
        var Category_En = $("#Word_En").val().trim();
        if (Word_En == '' || Word_En == undefined || Word_En == null) {
            ErrorMsg += "<li>Please Fill the Word_En Field to Proceed</li>";
            result = false;
        }
        var Descr_En = $("#Descr_En").val().trim();
        if (Descr_En == '' || Descr_En == undefined || Descr_En == null) {
            ErrorMsg += "<li>Please Fill the Descr_En Field to Proceed</li>";
            result = false;
        }
        var Explanation_En = $("#Explanation_En").val().trim();
        if (Explanation_En == '' || Explanation_En == undefined || Explanation_En == null) {
            ErrorMsg += "<li>Please Fill the Explanation_En Field to Proceed</li>";
            result = false;
        }
        var PartOfSpeech = $("#PartOfSpeech").val();
        if (PartOfSpeech == '' || PartOfSpeech == undefined || PartOfSpeech == null) {
            ErrorMsg += "<li>Please Select the Part Of Speech Field to Proceed</li>";
            result = false;
        }
        var WordRoots = $("#WordRoots").val();
        if (WordRoots == '' || WordRoots == undefined || WordRoots == null) {
            ErrorMsg += "<li>Please Select the Word Roots Field to Proceed</li>";
            result = false;
        }
        if ('@ViewBag.Action' == 'New') {
            var fileInput = $("#fileInput").val().trim();
            if (fileInput == '' || fileInput == undefined || fileInput == null) {
                ErrorMsg += "<li>Please Upload Icon Image to Proceed</li>";
                result = false;
            }
        }
        ErrorMsg += "</ul>";
        if (result) {
            ClickToSave();
        }
        else {
            $("#DivMsg").html(ErrorMsg);
            $("#DivMsg").css('color', 'red');
        }
    }
    function ClickToSave() {
        var UserId = $(".UserContainer").attr("Userid");
        var fileUpload = $("#fileInput").get(0);  
        var files = fileUpload.files;
        var obj = new FormData();
        obj.append("Id", $("#Id").val().trim());
        obj.append("CatgeoryId", $('#CatgeoryId').val());
        obj.append("SerialNo",$("#SerialNo").val().trim());
        obj.append("Word_En",$('#Word_En').val().trim());
        obj.append("Word_Hi", $('#Word_Hi').val().trim());
        obj.append("Word_Ur",$('#Word_Ur').val().trim())
        obj.append("Descr_En", $('#Descr_En').val().trim());
        obj.append("Descr_Hi",$('#Descr_Hi').val().trim());
        obj.append("Descr_Ur", $('#Descr_Ur').val().trim());
        obj.append("Explanation_En", $('#Explanation_En').val().trim());
        obj.append("Explanation_Hi",$('#Explanation_Hi').val().trim());
        obj.append("Explanation_Ur",$('#Explanation_Ur').val().trim());
        obj.append("Sher",$("#Sher").val());
        obj.append("PartOfSpeech", $("#PartOfSpeech").val());
        obj.append("WordType", $("#WordType").val());
        obj.append("WordRoots", $("#WordRoots").val());
        obj.append("WordSynonyms", $("#WordSynonyms").val().trim());
        obj.append("MoreSher", $("#MoreSher").val());
        obj.append("IsActive",$("#IsActive").val().trim());
        obj.append("Image", files[0]);
        obj.append("CreatedBy", UserId);
        obj.append("ModifiedBy", UserId);

        
        $.ajax({
            url: '/Home/AddWord',
            type: "POST",
            contentType: false, // Not to set any content header  
            processData: false, // Not to process data  
            data: obj,  
            success: function (result) { 
                $("#DivMsg").html(result.responseText);
                if (result.success == true) {
                    $("#DivMsg").css('color', 'green');
                }
                else {
                    $("#DivMsg").css('color', 'red');
                }
                },  
                error: function (err) {  
                    alert(err.statusText);  
                }  
            });
    }
    $(document).ready(function(){
        $("#Word_En").keyup(function () {
            debugger;
            FillSher();
          });
    });
    $(window).load(function () {
        debugger;
        var UserId = $(".UserContainer").attr("Userid");
         $("#CreatedBy").val(UserId);
         FillSher();
         var Sher = '@Model.Sher';
         var MoreSher = '@Model.MoreSher';
         if (Sher != undefined || Sher != '') {
             $("#Sher").val(Sher);
         }
         if (MoreSher != undefined || MoreSher != '') {
             $("#MoreSher").val(MoreSher);
        }     
        $("#WordRoots").val('@Model.WordRoots');
    });
    function FillSher() {
        var txtFilter = $("#Word_En").val();
            if (txtFilter.length < 4) { return false;}
              $("#Word_En").css("background-color", "yellow");
              $.ajax({
                url:"/Home/FillSher",
                dataType: 'json',
                data: { Filtertxt: txtFilter },
                success: function (data) {                
                    $("#Sher").empty();
                    $("#Sher").append("<option value='0' selected=true>Select</option>");
                    $("#MoreSher").empty();
                    $("#MoreSher").append("<option value='0' selected=true>Select</option>");
                    $.each(data, function (index, optiondata) {
                        $("#Sher").append("<option value='" + optiondata.Id + "' Selected ='" + optiondata.selected + "'>" + optiondata.Content + "</option>");
                        $("#MoreSher").append("<option value='" + optiondata.Id + "' Selected ='" + optiondata.selected + "'>" + optiondata.Content + "</option>");
                        var Sher = '@Model.Sher';
                        var MoreSher = '@Model.MoreSher';
                        if (Sher != undefined || Sher != '') {
                            $("#Sher").val(Sher);
                        }
                        else {$("#Sher").val(0);}
                        if (MoreSher != undefined || MoreSher != '') {
                            $("#MoreSher").val(MoreSher);
                        } else {$("#MoreSher").val(0);   }
                    });
                }
              });
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<style>
    .mandatory-field:after {
        content: " *";
        color: red;
    }
    #WordSynonyms {
        width: 100%;
        height: 70px;
    }
    .select {
    max-width:600px;
    padding: 2px 10px;
    border: 1px solid #979997;
}
    
</style>
